name: CICD gross_to_net

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    name: Run Unit test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      run: |
        curl -Ls https://astral.sh/uv/install.sh | bash
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies with uv
      run: |
        uv sync
        pip install pytest  # Cài pytest nếu chưa có

    - name: Set PYTHONPATH to include the root of the project
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

    - name: Run Unit test
      run: |
        pytest tests/
  build-push:
  name: 🚀 Build and Push Docker Images
  runs-on: ubuntu-latest
  needs: test
  steps:
    - name: 🐳 Checkout Code
      uses: actions/checkout@v3

    - name: 🏗️ Build Image
      run: |
        docker build -f docker/net.dockerfile -t ${{ secrets.DOCKER_USERNAME }}/api-project:latest .
        docker build -f docker/streamlit.dockerfile -t ${{ secrets.DOCKER_USERNAME }}/streamlit:latest .

    - name: 🔐 Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 🚀 Push Image
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/api-project:latest ${{ secrets.DOCKER_USERNAME }}/api-project:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/api-project:latest

        docker tag ${{ secrets.DOCKER_USERNAME }}/streamlit:latest ${{ secrets.DOCKER_USERNAME }}/streamlit:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/streamlit:latest
